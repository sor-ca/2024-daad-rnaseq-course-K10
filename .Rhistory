#install.packages("pacman")
#install.packages("here")
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
getwd()
here::i_am("2024-daad-rnaseq-course-K10", "Dif_exp_DSE164877")
library(readr)
GSE164877_RawCounts <- read_csv("GSE164877_RawCounts.csv")
View(GSE164877_RawCounts)
#install.packages("pacman")
#install.packages("here")
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
here::i_am("2024-daad-rnaseq-course-K10", "Dif_exp_DSE164877")
install.packages("pacman")
install.packages("here")
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
install.packages("here")
install.packages("pacman")
here::i_am("2024-daad-rnaseq-course-K10", "Dif_exp_DSE164877")
install.packages("pacman")
#install.packages("pacman")
#install.packages("here")
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
here::i_am("2024-daad-rnaseq-course-K10", "Dif_exp_DSE164877")
here::i_am("2024-daad-rnaseq-course-K10", "Dif_exp_DSE164877")
here::i_am("GitHub", "2024-daad-rnaseq-course-K10", "Dif_exp_DSE164877")
i_am(2024-daad-rnaseq-course-K10/Dif_exp_DSE164877.Rdm)
i_am(2024-daad-rnaseq-course-K10/Dif_exp_DSE164877.Rmd)
i_am("2024-daad-rnaseq-course-K10/Dif_exp_DSE164877.Rmd")
i_am("GitHub/2024-daad-rnaseq-course-K10/Dif_exp_DSE164877.Rmd")
i_am("C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/Dif_exp_DSE164877.Rmd")
i_am("C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
i_am("GitHub/2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
#install.packages("pacman")
#install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
i_am("2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
i_am("2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
i_am("C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
here("C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
#install.packages("pacman")
#install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
here("C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
i_am("2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "meta164877.csv"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "meta164877.csv"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "metadata.csv"), row.names = 1)
counts
ggplot(counts, aes(x=CDL_0002)) +
geom_density(color="darkblue", fill="lightblue")
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "README.md"), row.names = 1)
ggplot(counts, aes(x=A1BG)) +
geom_density(color="darkblue", fill="lightblue")
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.md(here("2024-daad-rnaseq-course-K10", "README.md"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "README.md"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix.csv"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix.csv"), row.names = 1)
ggplot(counts, aes(x=A1BG)) +
geom_density(color="darkblue", fill="lightblue")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
#install.packages("pacman")
#install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "EnhancedVolcano")
install.packages("pacman")
install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "EnhancedVolcano")
#install.packages("pacman")
#install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "schales", "oligo", "maEndToEnd", "pd.mogene.2.0.st")
#install.packages("pacman")
#install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "oligo", "maEndToEnd",  "EnhancedVolcano", "pd.mogene.2.0.st")
install.packages("pacman")
install.packages("here")
getwd()
pacman::p_load("here", "tidyverse", "DESeq2", "ashr", "oligo", "maEndToEnd",  "EnhancedVolcano", "pd.mogene.2.0.st")
install.packages("here")
install.packages("pacman")
i_am("2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
i_am("2024-daad-rnaseq-course-K10/Dif_exp_GSE164877.Rmd")
install.packages('BiocManager')
BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.txt.gz")
install.packages('BiocManager')
BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.txt")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.txt")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.csv")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.csv")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix (1).txt")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.txt")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix.txt/GSE164877_series_matrix.txt")
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="2024-daad-rnaseq-course-K10/GSE164877_series_matrix1.csv")
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
file_path <- "2024-daad-rnaseq-course-K10/metadata.txt"
file.exists(file_path)
#counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
#metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
file_path <- "2024-daad-rnaseq-course-K10/metadata.txt"
file.exists(file_path)
getwd()
#counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
#metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
file.exists(file_path)
getwd()
#counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
#metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Define file path
metadata_path <- "2024-daad-rnaseq-course-K10/metadata.txt"
# Check if the file exists
file.exists(metadata_path)
# Absolute path example
metadata_path <- "/full/path/to/2024-daad-rnaseq-course-K10/metadata.txt"
# Absolute path example
metadata_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_series_matrix1.csv"), row.names = 1)
setwd("C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt")
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10", "metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Define the file path
metadata_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
# Check if the file exists
file.exists(metadata_path)
# Attempt to read the file
metadata <- tryCatch({
read.table(metadata_path, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
}, error = function(e) {
message("Error reading file: ", e$message)
NULL  # Return NULL in case of error
})
# Check if metadata was successfully loaded
if (!is.null(metadata)) {
print("File read successfully.")
head(metadata)
} else {
print("Failed to read file.")
}
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10", "GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10", "metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
getwd()
#counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
#metadata <- read.table("2024-daad-rnaseq-course-K10/metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="metadata.txt")
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("metadata.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#install.packages('BiocManager')
#BiocManager::install('GEOquery')
library("GEOquery")
gse=getGEO(filename="metadata.txt")
gse
gse
write.table(gse, file='metadata_gse.txt')
read.table("metadata _gse.txt")
write.table(gse, file='metadata_gse.txt')
read.table("metadata_gse.txt")
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
write.table(gse, file='metadata_gse.txt')
read.table("metadata_gse.txt")
write.table(gse, file='metadata_gse.txt')
read.table("metadata_gse.txt")
write.table(gse, file='metadata_gse.txt')
read.table("metadata_gse.txt")
write.table(gse, file='metadata_gse.txt')
read.table("metadata_gse.txt")
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#file_path <- "C:/Users/admin/Documents/GitHub/2024-daad-rnaseq-course-K10/metadata.txt"
#file.exists(file_path)
#getwd()
counts <- read.csv(here("2024-daad-rnaseq-course-K10/GSE164877_RawCounts.csv"), row.names = 1)
metadata <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
metadata <- metadata %>% unite(experiment_treatment, c("experiment", "treatment"))
# Check if the metadata and count data align
stopifnot(all(colnames(counts) %in% rownames(metadata)))
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = metadata,
design = ~ brain_region + phenotype + sex + time_point)
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = metadata,
design = ~ brain_region + phenotype + sex + time_point)
# Load necessary packages
library(DESeq2)
# Ensure metadata and counts are aligned
metadata <- as.data.frame(metadata)
metadata <- metadata[match(colnames(counts), rownames(metadata)), ]
# Verify column names and structure
colnames(metadata)
str(metadata)
# Check if required columns exist and are in the correct format
required_columns <- c("brain_region", "phenotype", "sex", "time_point")
missing_columns <- setdiff(required_columns, colnames(metadata))
if (length(missing_columns) > 0) {
stop("Missing columns in metadata: ", paste(missing_columns, collapse = ", "))
}
# Check the first few rows and column names of the metadata
head(metadata)
colnames(metadata)
# Check if file exists
if (!file.exists("metadata_gse.txt")) {
stop("Metadata file does not exist.")
}
# Try reading the file with different settings
metadata <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Check if metadata has been loaded correctly
if (nrow(metadata) == 0 || is.null(colnames(metadata))) {
stop("Metadata file could not be read correctly. Check the file format and contents.")
}
# Verify content and structure
print(head(metadata))
print(colnames(metadata))
# Read the file with correct delimiter
metadata <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Check column names and data
print(colnames(metadata))
print(head(metadata))
# If columns are misaligned, adjust column names manually
colnames(metadata) <- c("sample_id", "brain_region", "phenotype", "sex", "time_point")
# Check the number of columns in the raw data
ncol(raw_data)
# Check if the file exists
if (!file.exists("metadata_gse.txt")) {
stop("The metadata file does not exist.")
}
# Read the file and check its structure
raw_data <- read.table("metadata_gse.txt", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
# Check if raw_data is created and view its structure
if (exists("raw_data")) {
print(dim(raw_data))  # Print dimensions to check if it's read correctly
print(head(raw_data))  # Print first few rows to inspect content
} else {
stop("Failed to read the metadata file.")
}
# Attempt reading with tab separator
raw_data_tab <- read.table("metadata_gse.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
if (ncol(raw_data_tab) > 1) {
print("Successfully read with tab separator")
print(dim(raw_data_tab))
print(head(raw_data_tab))
raw_data <- raw_data_tab
} else {
# Attempt reading with comma separator if tab separator fails
raw_data_comma <- read.table("metadata_gse.txt", header = TRUE, sep = ",", stringsAsFactors = FALSE)
if (ncol(raw_data_comma) > 1) {
print("Successfully read with comma separator")
print(dim(raw_data_comma))
print(head(raw_data_comma))
raw_data <- raw_data_comma
} else {
stop("Failed to read the file with both tab and comma separators.")
}
}
# Load necessary packages
library(DESeq2)
# Ensure metadata and counts are aligned
metadata <- as.data.frame(metadata)
metadata <- metadata[match(colnames(counts), rownames(metadata)), ]
# Verify column names and structure
colnames(metadata)
str(metadata)
# Check if required columns exist and are in the correct format
required_columns <- c("brain_region", "phenotype", "sex", "time_point")
missing_columns <- setdiff(required_columns, colnames(metadata))
# Convert relevant columns to factors (if not already)
metadata$brain_region <- as.factor(metadata$brain_region)
dds <- DESeqDataSetFromMatrix(countData = counts, colData = metadata,
design = ~experiment_treatment)
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = metadata,
design = ~ characteristics_ch1.3 + characteristics_ch1 + characteristics_ch1.1 + characteristics_ch1.2 + molecule_ch1)
coldata <- data.frame(
sample_id = colnames(counts),
characteristics_ch1.3 = factor(c("tissue: blood")),
characteristics_ch1.2 = colnames(counts),
characteristics_ch1 = factor(c("subject gender: male")),
characteristics_ch1.1 = factor(c("	subject race/ethnicity: caucasian"))
)
rownames(coldata) <- colnames(counts)
coldata <- data.frame(
sample_id = colnames(counts),
characteristics_ch1.3 = factor(c("tissue: blood")),
characteristics_ch1.2 = colnames(counts),
characteristics_ch1 = factor(c("subject gender: male")),
characteristics_ch1.1 = factor(c("	subject race/ethnicity: caucasian"))
)
rownames(coldata) <- colnames(counts)
subset_data <- coldata[coldata$characteristics_ch1.2 %in% colnames(counts), ]
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ characteristics_ch1.2)
dds_subset <- DESeq(dds_subset)
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ characteristics_ch1.3)
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ sample_id)
dds_subset <- DESeq(dds_subset)
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ characteristics_ch1.2)
dds_subset <- DESeq(dds_subset)
coldata <- data.frame(
sample_id = colnames(counts),
characteristics_ch1.3 = factor(c("tissue: blood")),
characteristics_ch1.2 = colnames(counts),
characteristics_ch1 = factor(c("subject gender: male", "subject gender: female")),
characteristics_ch1.1 = factor(c("	subject race/ethnicity: caucasian"))
)
rownames(coldata) <- colnames(counts)
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ characteristics_ch1)
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ characteristics_ch1.2)
dds_subset <- DESeq(dds_subset)
plotMA(res_phenotype)
dds_subset <- DESeqDataSetFromMatrix(countData = counts[, rownames(subset_data)],
colData = subset_data,
design = ~ characteristics_ch1.2)
dds_subset <- DESeq(dds_subset)
subset_data <- coldata[coldata$characteristics_ch1.2 %in% colnames(counts), ]
subset_data <- coldata[coldata$characteristics_ch1.2 %in% colnames(counts), ]
coldata <- data.frame(
sample_id = colnames(counts),
characteristics_ch1.3 = factor(c("tissue: blood")),
characteristics_ch1.2 = colnames(counts),
characteristics_ch1 = factor(c("subject gender: male")),
characteristics_ch1.1 = factor(c("	subject race/ethnicity: caucasian"))
)
rownames(coldata) <- colnames(counts)
